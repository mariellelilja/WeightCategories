/*
 * This file was automatically generated by EvoSuite
 * Sun Jun 30 22:28:18 GMT 2024
 */

package org.example;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.example.WeightHelper;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WeightHelper_ESTest extends WeightHelper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        WeightHelper.getCategory(18.5, 300.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Write values for height and weight below 250.0 kg or 300.0 cm.
         //
         verifyException("org.example.WeightHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        WeightHelper.calculateBMI(250.0, 30.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Write values for height and weight below 250.0 kg or 300.0 cm.
         //
         verifyException("org.example.WeightHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        WeightHelper.getCategory(285.0, (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Write values for height and weight above 0 kg or 0 cm.
         //
         verifyException("org.example.WeightHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        WeightHelper.getCategory((-1.0), (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Write values for height and weight above 0 kg or 0 cm.
         //
         verifyException("org.example.WeightHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        WeightHelper.calculateBMI(2032.8662871812617, 2032.8662871812617);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Write values for height and weight below 250.0 kg or 300.0 cm.
         //
         verifyException("org.example.WeightHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        WeightHelper.calculateBMI(100.0, 4340.990225537169);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Write values for height and weight below 250.0 kg or 300.0 cm.
         //
         verifyException("org.example.WeightHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double double0 = WeightHelper.calculateBMI(91.96, 91.96);
      assertEquals(108.74293170943888, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = WeightHelper.getCategory(100.0, 25.0);
      assertEquals("Overweight", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = WeightHelper.getCategory(25.611554068751914, 1.4769660352014922);
      assertEquals("Normal weight", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = WeightHelper.getCategory(24.882, 1.14524);
      assertEquals("Underweight", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        WeightHelper.calculateBMI(30.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Write values for height and weight above 0 kg or 0 cm.
         //
         verifyException("org.example.WeightHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = WeightHelper.getCategory(30.0, 30.0);
      assertEquals("Obese", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        WeightHelper.calculateBMI(0.0, (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Write values for height and weight above 0 kg or 0 cm.
         //
         verifyException("org.example.WeightHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      WeightHelper weightHelper0 = new WeightHelper();
  }
}
